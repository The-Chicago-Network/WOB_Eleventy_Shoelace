{"version":3,"sources":["../../src/methods/hooks.ts"],"sourcesContent":["import * as ERRORS from \"../errors.js\";\nimport type { Lyra, PropertiesSchema } from \"../types/index.js\";\n\nexport interface AfterInsertHook {\n  <S extends PropertiesSchema = PropertiesSchema>(this: Lyra<S>, id: string): Promise<void> | void;\n}\n\nexport type Hooks = {\n  afterInsert?: AfterInsertHook | AfterInsertHook[];\n};\n\nconst SUPPORTED_HOOKS = [\"afterInsert\"];\n\nexport function validateHooks(hooks?: Hooks): void | never {\n  if (hooks) {\n    if (typeof hooks !== \"object\") {\n      throw new Error(ERRORS.INVALID_HOOKS_OBJECT());\n    }\n\n    const invalidHooks = Object.keys(hooks).filter(hook => !SUPPORTED_HOOKS.includes(hook));\n    if (invalidHooks.length) {\n      throw new Error(ERRORS.NON_SUPPORTED_HOOKS(invalidHooks));\n    }\n  }\n}\n\nexport async function hookRunner<S extends PropertiesSchema>(\n  this: Lyra<S>,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  funcs: Function | Function[],\n  ...args: unknown[]\n): Promise<void> {\n  const hooks = Array.isArray(funcs) ? funcs : [funcs];\n  for (let i = 0; i < hooks.length; i++) {\n    await hooks[i].apply(this, args);\n  }\n}\n"],"names":["ERRORS","SUPPORTED_HOOKS","validateHooks","hooks","Error","INVALID_HOOKS_OBJECT","invalidHooks","Object","keys","filter","hook","includes","length","NON_SUPPORTED_HOOKS","hookRunner","funcs","args","Array","isArray","i","apply"],"mappings":"AAAA,YAAYA,YAAY,eAAe;AAWvC,MAAMC,kBAAkB;IAAC;CAAc;AAEvC,OAAO,SAASC,cAAcC,KAAa,EAAgB;IACzD,IAAIA,OAAO;QACT,IAAI,OAAOA,UAAU,UAAU;YAC7B,MAAM,IAAIC,MAAMJ,OAAOK,oBAAoB,IAAI;QACjD,CAAC;QAED,MAAMC,eAAeC,OAAOC,IAAI,CAACL,OAAOM,MAAM,CAACC,CAAAA,OAAQ,CAACT,gBAAgBU,QAAQ,CAACD;QACjF,IAAIJ,aAAaM,MAAM,EAAE;YACvB,MAAM,IAAIR,MAAMJ,OAAOa,mBAAmB,CAACP,eAAe;QAC5D,CAAC;IACH,CAAC;AACH,CAAC;AAED,OAAO,eAAeQ,WAEpB,wDAAwD;AACxDC,KAA4B,EAC5B,GAAGC,IAAe,EACH;IACf,MAAMb,QAAQc,MAAMC,OAAO,CAACH,SAASA,QAAQ;QAACA;KAAM;IACpD,IAAK,IAAII,IAAI,GAAGA,IAAIhB,MAAMS,MAAM,EAAEO,IAAK;QACrC,MAAMhB,KAAK,CAACgB,EAAE,CAACC,KAAK,CAAC,IAAI,EAAEJ;IAC7B;AACF,CAAC"}