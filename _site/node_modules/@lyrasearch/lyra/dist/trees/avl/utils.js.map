{"version":3,"sources":["../../../src/trees/avl/utils.ts"],"sourcesContent":["import type { AVLNode } from './node.js';\n\nexport const BALANCE_STATE = {\n  UNBALANCED_RIGHT: 1,\n  SLIGHTLY_UNBALANCED_RIGHT: 2,\n  BALANCED: 3,\n  SLIGHTLY_UNBALANCED_LEFT: 4,\n  UNBALANCED_LEFT: 5,\n};\n\nexport function getBalanceFactor<K, V>(node: AVLNode<K, V>): number {\n  const heightDifference = getHeight(node.left) - getHeight(node.right);\n\n  switch (heightDifference) {\n    case -2:\n      return BALANCE_STATE.UNBALANCED_RIGHT;\n    case -1:\n      return BALANCE_STATE.SLIGHTLY_UNBALANCED_RIGHT;\n    case 1:\n      return BALANCE_STATE.SLIGHTLY_UNBALANCED_LEFT;\n    case 2:\n      return BALANCE_STATE.UNBALANCED_LEFT;\n    default:\n      return BALANCE_STATE.BALANCED;\n  }\n}\n\nexport function getHeight<K, V>(node: AVLNode<K, V> | null): number {\n  return node ? node.height : -1;\n}\n\nexport function rotateLeft<K, V>(node: AVLNode<K, V>): AVLNode<K, V> {\n  const right = node.right as AVLNode<K, V>;\n  node.right = right.left;\n  right.left = node;\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n  right.height = Math.max(getHeight(right.left), getHeight(right.right)) + 1;\n  return right;\n}\n\nexport function rotateRight<K, V>(node: AVLNode<K, V>): AVLNode<K, V> {\n  const left = node.left as AVLNode<K, V>;\n  node.left = left.right;\n  left.right = node;\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n  left.height = Math.max(getHeight(left.left), getHeight(left.right)) + 1;\n  return left;\n}\n\nexport function findMin<K, V>(node: AVLNode<K, V>): AVLNode<K, V> {\n  return node.left ? findMin(node.left) : node;\n}"],"names":["BALANCE_STATE","UNBALANCED_RIGHT","SLIGHTLY_UNBALANCED_RIGHT","BALANCED","SLIGHTLY_UNBALANCED_LEFT","UNBALANCED_LEFT","getBalanceFactor","node","heightDifference","getHeight","left","right","height","rotateLeft","Math","max","rotateRight","findMin"],"mappings":"AAEA,OAAO,MAAMA,gBAAgB;IAC3BC,kBAAkB;IAClBC,2BAA2B;IAC3BC,UAAU;IACVC,0BAA0B;IAC1BC,iBAAiB;AACnB,EAAE;AAEF,OAAO,SAASC,iBAAuBC,IAAmB,EAAU;IAClE,MAAMC,mBAAmBC,UAAUF,KAAKG,IAAI,IAAID,UAAUF,KAAKI,KAAK;IAEpE,OAAQH;QACN,KAAK,CAAC;YACJ,OAAOR,cAAcC,gBAAgB;QACvC,KAAK,CAAC;YACJ,OAAOD,cAAcE,yBAAyB;QAChD,KAAK;YACH,OAAOF,cAAcI,wBAAwB;QAC/C,KAAK;YACH,OAAOJ,cAAcK,eAAe;QACtC;YACE,OAAOL,cAAcG,QAAQ;IACjC;AACF,CAAC;AAED,OAAO,SAASM,UAAgBF,IAA0B,EAAU;IAClE,OAAOA,OAAOA,KAAKK,MAAM,GAAG,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,SAASC,WAAiBN,IAAmB,EAAiB;IACnE,MAAMI,QAAQJ,KAAKI,KAAK;IACxBJ,KAAKI,KAAK,GAAGA,MAAMD,IAAI;IACvBC,MAAMD,IAAI,GAAGH;IACbA,KAAKK,MAAM,GAAGE,KAAKC,GAAG,CAACN,UAAUF,KAAKG,IAAI,GAAGD,UAAUF,KAAKI,KAAK,KAAK;IACtEA,MAAMC,MAAM,GAAGE,KAAKC,GAAG,CAACN,UAAUE,MAAMD,IAAI,GAAGD,UAAUE,MAAMA,KAAK,KAAK;IACzE,OAAOA;AACT,CAAC;AAED,OAAO,SAASK,YAAkBT,IAAmB,EAAiB;IACpE,MAAMG,OAAOH,KAAKG,IAAI;IACtBH,KAAKG,IAAI,GAAGA,KAAKC,KAAK;IACtBD,KAAKC,KAAK,GAAGJ;IACbA,KAAKK,MAAM,GAAGE,KAAKC,GAAG,CAACN,UAAUF,KAAKG,IAAI,GAAGD,UAAUF,KAAKI,KAAK,KAAK;IACtED,KAAKE,MAAM,GAAGE,KAAKC,GAAG,CAACN,UAAUC,KAAKA,IAAI,GAAGD,UAAUC,KAAKC,KAAK,KAAK;IACtE,OAAOD;AACT,CAAC;AAED,OAAO,SAASO,QAAcV,IAAmB,EAAiB;IAChE,OAAOA,KAAKG,IAAI,GAAGO,QAAQV,KAAKG,IAAI,IAAIH,IAAI;AAC9C,CAAC"}