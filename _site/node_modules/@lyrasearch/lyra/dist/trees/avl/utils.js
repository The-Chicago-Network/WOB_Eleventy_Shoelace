export const BALANCE_STATE = {
    UNBALANCED_RIGHT: 1,
    SLIGHTLY_UNBALANCED_RIGHT: 2,
    BALANCED: 3,
    SLIGHTLY_UNBALANCED_LEFT: 4,
    UNBALANCED_LEFT: 5
};
export function getBalanceFactor(node) {
    const heightDifference = getHeight(node.left) - getHeight(node.right);
    switch(heightDifference){
        case -2:
            return BALANCE_STATE.UNBALANCED_RIGHT;
        case -1:
            return BALANCE_STATE.SLIGHTLY_UNBALANCED_RIGHT;
        case 1:
            return BALANCE_STATE.SLIGHTLY_UNBALANCED_LEFT;
        case 2:
            return BALANCE_STATE.UNBALANCED_LEFT;
        default:
            return BALANCE_STATE.BALANCED;
    }
}
export function getHeight(node) {
    return node ? node.height : -1;
}
export function rotateLeft(node) {
    const right = node.right;
    node.right = right.left;
    right.left = node;
    node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;
    right.height = Math.max(getHeight(right.left), getHeight(right.right)) + 1;
    return right;
}
export function rotateRight(node) {
    const left = node.left;
    node.left = left.right;
    left.right = node;
    node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;
    left.height = Math.max(getHeight(left.left), getHeight(left.right)) + 1;
    return left;
}
export function findMin(node) {
    return node.left ? findMin(node.left) : node;
}

//# sourceMappingURL=utils.js.map