{"version":3,"sources":["../../src/methods/common.ts"],"sourcesContent":["import * as ERRORS from \"../errors.js\";\nimport type { Lyra, PropertiesSchema, ResolveSchema } from \"../types/index.js\";\nimport type { SearchParams } from \"./search.js\";\n\nexport function assertDocSchema<S extends PropertiesSchema>(doc: ResolveSchema<S>, lyraSchema: PropertiesSchema) {\n  if (!recursiveCheckDocSchema(doc, lyraSchema)) {\n    throw new Error(ERRORS.INVALID_DOC_SCHEMA(lyraSchema, doc));\n  }\n}\n\nexport function recursiveCheckDocSchema<S extends PropertiesSchema>(\n  newDoc: ResolveSchema<S>,\n  schema: PropertiesSchema,\n): boolean {\n  for (const key in newDoc) {\n    if (!(key in schema)) {\n      continue;\n    }\n\n    const propType = typeof newDoc[key];\n\n    if (propType === \"object\") {\n      recursiveCheckDocSchema(newDoc[key] as ResolveSchema<S>, schema);\n    } else if (typeof newDoc[key] !== schema[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function getIndices<S extends PropertiesSchema>(\n  lyra: Lyra<S>,\n  indices: SearchParams<S>[\"properties\"],\n): string[] {\n  const knownIndices = Object.keys(lyra.index);\n\n  if (!indices) {\n    return knownIndices;\n  }\n\n  if (typeof indices === \"string\") {\n    if (indices !== \"*\") {\n      throw new Error(ERRORS.INVALID_PROPERTY(indices, knownIndices));\n    }\n    return knownIndices;\n  }\n\n  for (const index of indices as string[]) {\n    if (!knownIndices.includes(index)) {\n      throw new Error(ERRORS.INVALID_PROPERTY(index, knownIndices));\n    }\n  }\n\n  return indices as string[];\n}\n"],"names":["ERRORS","assertDocSchema","doc","lyraSchema","recursiveCheckDocSchema","Error","INVALID_DOC_SCHEMA","newDoc","schema","key","propType","getIndices","lyra","indices","knownIndices","Object","keys","index","INVALID_PROPERTY","includes"],"mappings":"AAAA,YAAYA,YAAY,eAAe;AAIvC,OAAO,SAASC,gBAA4CC,GAAqB,EAAEC,UAA4B,EAAE;IAC/G,IAAI,CAACC,wBAAwBF,KAAKC,aAAa;QAC7C,MAAM,IAAIE,MAAML,OAAOM,kBAAkB,CAACH,YAAYD,MAAM;IAC9D,CAAC;AACH,CAAC;AAED,OAAO,SAASE,wBACdG,MAAwB,EACxBC,MAAwB,EACf;IACT,IAAK,MAAMC,OAAOF,OAAQ;QACxB,IAAI,CAAEE,CAAAA,OAAOD,MAAK,GAAI;YACpB,QAAS;QACX,CAAC;QAED,MAAME,WAAW,OAAOH,MAAM,CAACE,IAAI;QAEnC,IAAIC,aAAa,UAAU;YACzBN,wBAAwBG,MAAM,CAACE,IAAI,EAAsBD;QAC3D,OAAO,IAAI,OAAOD,MAAM,CAACE,IAAI,KAAKD,MAAM,CAACC,IAAI,EAAE;YAC7C,OAAO,KAAK;QACd,CAAC;IACH;IAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,SAASE,WACdC,IAAa,EACbC,OAAsC,EAC5B;IACV,MAAMC,eAAeC,OAAOC,IAAI,CAACJ,KAAKK,KAAK;IAE3C,IAAI,CAACJ,SAAS;QACZ,OAAOC;IACT,CAAC;IAED,IAAI,OAAOD,YAAY,UAAU;QAC/B,IAAIA,YAAY,KAAK;YACnB,MAAM,IAAIR,MAAML,OAAOkB,gBAAgB,CAACL,SAASC,eAAe;QAClE,CAAC;QACD,OAAOA;IACT,CAAC;IAED,KAAK,MAAMG,SAASJ,QAAqB;QACvC,IAAI,CAACC,aAAaK,QAAQ,CAACF,QAAQ;YACjC,MAAM,IAAIZ,MAAML,OAAOkB,gBAAgB,CAACD,OAAOH,eAAe;QAChE,CAAC;IACH;IAEA,OAAOD;AACT,CAAC"}