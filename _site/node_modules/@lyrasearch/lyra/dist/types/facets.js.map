{"version":3,"sources":["../../src/types/facets.ts"],"sourcesContent":["import { PropertiesSchema, PropertyType } from \"./index.js\";\n\nexport type FacetSorting = \"asc\" | \"desc\" | \"ASC\" | \"DESC\";\n\nexport type FacetsSearch<S extends PropertiesSchema, P extends string = \"\", K extends keyof S = keyof S> = K extends string\n  ? S[K] extends PropertiesSchema\n    ? FacetsSearch<S[K], `${P}${K}.`>\n    : S[K] extends PropertyType\n      ? { [key in `${P}${K}`]?: FacetTypeInterfaces[S[K]] }\n      : never\n  : never;\n\ntype FacetTypeInterfaces = {\n  string: {\n    limit?: number;\n    offset?: number;\n    sort?: FacetSorting;\n  };\n  number: {\n    ranges: {from: number, to: number}[]\n  };\n  boolean: {\n    true?: boolean;\n    false?: boolean;\n  };\n}"],"names":[],"mappings":"AAAA,WAyBC"}